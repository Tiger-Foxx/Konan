<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime">

    <!-- Material Design Theme -->
    <ResourceDictionary.MergedDictionaries>
        <materialDesign:BundledTheme BaseTheme="Dark" 
                                     PrimaryColor="DeepPurple" 
                                     SecondaryColor="Cyan" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Colors -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="#6366f1"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="#8b5cf6"/>
    <SolidColorBrush x:Key="AccentBrush" Color="#06b6d4"/>
    
    <!-- Glassmorphism Window Style -->
    <Style x:Key="GlassmorphWindow" TargetType="Window">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border CornerRadius="16" Margin="15">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#CC1e1b4b" Offset="0"/>
                                <GradientStop Color="#CC312e81" Offset="0.5"/>
                                <GradientStop Color="#CC1e1b4b" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.Effect>
                            <DropShadowEffect Color="#000000" Opacity="0.6" BlurRadius="25" ShadowDepth="0"/>
                        </Border.Effect>
                        <Border CornerRadius="16" Background="#10FFFFFF" 
                               BorderBrush="#30FFFFFF" BorderThickness="1">
                            <ContentPresenter/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern Icon Button CORRIGÉ -->
    <Style x:Key="ModernIconButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BorderElement" 
                           Background="{TemplateBinding Background}"
                           CornerRadius="10"
                           RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderElement"
                                                  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                  To="#30FFFFFF" Duration="0:0:0.15"/>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                   Storyboard.TargetProperty="ScaleX"
                                                   To="1.05" Duration="0:0:0.15"/>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                   Storyboard.TargetProperty="ScaleY"
                                                   To="1.05" Duration="0:0:0.15"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderElement"
                                                  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                  To="Transparent" Duration="0:0:0.15"/>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                   Storyboard.TargetProperty="ScaleX"
                                                   To="1" Duration="0:0:0.15"/>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                   Storyboard.TargetProperty="ScaleY"
                                                   To="1" Duration="0:0:0.15"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- <Trigger Property="IsPressed" Value="True"> -->
                        <!--     <Setter TargetName="ScaleTransform" Property="ScaleX" Value="0.95"/> -->
                        <!--     <Setter TargetName="ScaleTransform" Property="ScaleY" Value="0.95"/> -->
                        <!-- </Trigger> -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Search TextBox Style CORRIGÉ -->
    <Style x:Key="ModernSearchBox" TargetType="TextBox">
        <Setter Property="Background" Value="#20FFFFFF"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#30FFFFFF"/>
        <Setter Property="Padding" Value="15,12"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CaretBrush" Value="#6366f1"/>
        <Setter Property="SelectionBrush" Value="#406366f1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="BorderElement" 
                           Background="{TemplateBinding Background}"
                           BorderBrush="{TemplateBinding BorderBrush}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           CornerRadius="20">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"/>
                            <TextBlock x:Name="PlaceholderText" 
                                     Text="Rechercher dans l'historique..."
                                     Foreground="#60FFFFFF"
                                     VerticalAlignment="Center"
                                     Margin="{TemplateBinding Padding}"
                                     IsHitTestVisible="False"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BorderElement" Property="BorderBrush" Value="#6366f1"/>
                            <Setter TargetName="BorderElement" Property="Background" Value="#30FFFFFF"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="{x:Static sys:String.Empty}"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom ScrollBar -->
    <Style x:Key="ModernScrollBar" TargetType="ScrollBar">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border x:Name="ThumbBorder"
                                                   Background="#40FFFFFF" 
                                                   CornerRadius="3"
                                                   Opacity="0.4"/>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ThumbBorder" Property="Opacity" Value="0.8"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Clipboard Item Card -->
    <Style x:Key="ClipboardCard" TargetType="Border">
        <Setter Property="Background" Value="#15FFFFFF"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Margin" Value="8,4"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="BorderBrush" Value="#20FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                      To="#25FFFFFF" Duration="0:0:0.2"/>
                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                      To="#40FFFFFF" Duration="0:0:0.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                       To="1.02" Duration="0:0:0.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                       To="1.02" Duration="0:0:0.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                      To="#15FFFFFF" Duration="0:0:0.2"/>
                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                      To="#20FFFFFF" Duration="0:0:0.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                       To="1" Duration="0:0:0.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                       To="1" Duration="0:0:0.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>